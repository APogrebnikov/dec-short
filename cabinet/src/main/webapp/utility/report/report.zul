<window id="winReport" mode="modal" closable="true" width="70%" height="100%"
        apply="org.edec.utility.report.ctrl.ReportPageCtrl">
    <caption>
        <label value="Отчет" />
    </caption>
    <vbox width="100%" height="100%">
        <hbox id="hbBtn" height="20%" width="100%" pack="end" style="margin-bottom: 10px; margin-top: 10px; margin-right: 15px;"/>
        <iframe id="iframeReport"/>
    </vbox>

    <script type="text/javascript">
        /*Инициализация процесса подписи
        * принимает base64 данные для подписания
        */
        function sign(base,pdfname)
        {
        var client = new LssClient(jQuery);
        signProc(client,base,pdfname);
        }

        /*Процесс подписания*/
        function signProc(client,base,pdfname)
        {
        var options =
        {
        base64Data: base,
        description: "Ведомость",
        documentName: pdfname,
        fileExtension: "pdf",
        isAttached: true,
        base64Certificate: "",
        };

        //Подписание с колбэком
        client.sign(options).done(function(response)
        {
        if (response.IsSuccessful)
        {
            var fullresult={};
            var res=response.SignedData;
            var signCertificate = $.parseJSON(response.SignCertificateJson);
            fullresult.Data=res;
            if(signCertificate!=null){
                fullresult.SerialNumber=signCertificate.SerialNumber;
                fullresult.Thumbprint=signCertificate.Thumbprint;
                zAu.send(new zk.Event(zk.Widget.$('$winReport'), "onFinish", fullresult, {toServer:true}));
            }else{
                verifySign(res, options, fullresult);
            }
        }
        else
        {
            var error = response.ErrorMessage;
            zAu.send(new zk.Event(zk.Widget.$('$winReport'), "onErrorSign", response.ErrorMessage, {toServer:true}));
        }
        }).fail(function(error)
        {
            zAu.send(new zk.Event(zk.Widget.$('$winReport'), "onErrorSign", 'Ошибка при подписании. Запустите программу для электронной цифровой подписи!', {toServer:true}));
        });
        }

        //Для тестирования обнаружения подписи
        function verifySign(base, options, res)
        {
            options["base64Data"] = base;
            var client = new LssClient(jQuery).withBypass();
            client.verifySign(options).done(function(response) {
                if (response.IsSuccessful) {
                    var signCertificate = $.parseJSON(response.SignInfo[0].SignCertificateJson);
                    res.Data = base;
                    res.SerialNumber = signCertificate.SerialNumber;
                    res.Thumbprint = signCertificate.Thumbprint;
                    zAu.send(new zk.Event(zk.Widget.$('$winReport'), "onFinish", res, {toServer:true}));
                    return res;
                } else {
                    alert(response.ErrorMessage);
                }
            }).fail(function(error) {
                alert('Ошибка при вызове метода verifySign.');
            });
        }
    </script>
    <script type="text/javascript" src="../js/libs/lss-client.js"/>
</window>